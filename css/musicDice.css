.board {
}

.hex_board {
    --amount: 5;
    display: grid;
    list-style-type: none;
    margin: 0;
    padding: 0;
    grid-template-columns: repeat(var(--amount), 1fr, 2fr) 1fr;
}

.hex-item {
    --counter: 1;
    position: relative;
    grid-column: 1 / span 3;
    grid-row: calc(var(--counter) + var(--counter)) / span 2;
    height: 0;
    padding: 1em;
}

.hex-content {
    position: absolute;
    left: 0;
    top: 0;
    height: 100%;
    width: 100%;
    background-color: white;
}

/* COLS */
.hex-item:nth-of-type(5n + 1) {
    grid-column: 1 / span 3;
}

.hex-item:nth-of-type(5n + 2) {
    grid-column: 3 / span 3;
    grid-row: calc(var(--counter) + var(--counter) - 1) / span 2;
}

.hex-item:nth-of-type(5n + 3) {
    grid-column: 5 / span 3;
}

.hex-item:nth-of-type(5n + 4) {
    grid-column: 7 / span 3;
    grid-row: calc(var(--counter) + var(--counter) - 1) / span 2;
}

.hex-item:nth-of-type(5n + 5) {
    grid-column: 9 / span 3;
}

/* ROWS */
/*Set counter for each row (last value + --amount +1)*/
.hex-item:nth-of-type(n + 6) {
    --counter: 2;
}

.hex-item:nth-of-type(n + 11) {
    --counter: 3;
}

.hex-item:nth-of-type(n + 16) {
    --counter: 4;
}

.hex-item:nth-of-type(n + 21) {
    --counter: 5;
}

.hex-item:nth-of-type(n + 26) {
    --counter: 6;
}

.hex-item:nth-of-type(n + 31) {
    --counter: 7;
}

.hex-item:nth-of-type(n + 36) {
    --counter: 8;
}

.hex-item:nth-of-type(n + 41) {
    --counter: 9;
}

.hex-item:nth-of-type(n + 46) {
    --counter: 10;
}
