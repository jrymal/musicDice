.board {
}

.hex_board {
    --amount: 5;
    display: grid;
    list-style-type: none;
    margin: 0;
    padding: 0;
    grid-template-columns: repeat(var(--amount), 1fr, 2fr) 1fr;
    grid-gap: .3rem 1.3rem;
    background-color: black;
}

.hex-item .hex-container[data-text]:not([data-text='']){
    background-image: radial-gradient(circle, white 0%, lightblue 80%);
} 

.hex-item {
    --counter: 1;
    position: relative;
    grid-row: calc(var(--counter) + var(--counter)) / span 2;
    height: 0;
    padding: .6em;
    padding-bottom: 80%;

}

.hex-container {
    position: absolute;
    left: 0;
    top: 0;
    height: 100%;
    width: 100%;
    background-color: white;
    clip-path: polygon(75% 0, 100% 50%, 75% 100%, 25% 100%, 0 50%, 25% 0);
    display: flex;

}

.hex-content {
  width: auto;
  height: auto;
  margin: auto;
}

/* COLS */
.hex-item:nth-of-type(11n + 1) {
    grid-column: 1 / span 3;
}

.hex-item:nth-of-type(11n + 2) {
    grid-column: 3 / span 3;
    grid-row: calc(var(--counter) + var(--counter) - 1) / span 2;
}

.hex-item:nth-of-type(11n + 3) {
    grid-column: 5 / span 3;
}

.hex-item:nth-of-type(11n + 4) {
    grid-column: 7 / span 3;
    grid-row: calc(var(--counter) + var(--counter) - 1) / span 2;
}

.hex-item:nth-of-type(11n + 5) {
    grid-column: 9 / span 3;
}

.hex-item:nth-of-type(11n + 6) {
    grid-column: 11 / span 3;
    grid-row: calc(var(--counter) + var(--counter) - 1) / span 2;
}

.hex-item:nth-of-type(11n + 7) {
    grid-column: 13 / span 3;
}

.hex-item:nth-of-type(11n + 8) {
    grid-column: 15 / span 3;
    grid-row: calc(var(--counter) + var(--counter) - 1) / span 2;
}

.hex-item:nth-of-type(11n + 9) {
    grid-column: 17 / span 3;
}

.hex-item:nth-of-type(11n + 10) {
    grid-column: 19 / span 3;
    grid-row: calc(var(--counter) + var(--counter) - 1) / span 2;
}

.hex-item:nth-of-type(11n + 11) {
    grid-column: 21 / span 3;
}

/* ROWS */
/*Set counter for each row (last value + --amount +1)*/
.hex-item:nth-of-type(n + 12) {
    --counter: 2;
}

.hex-item:nth-of-type(n + 23) {
    --counter: 3;
}

.hex-item:nth-of-type(n + 34) {
    --counter: 4;
}

.hex-item:nth-of-type(n + 45) {
    --counter: 5;
}

.hex-item:nth-of-type(n + 56) {
    --counter: 6;
}

.hex-item:nth-of-type(n + 67) {
    --counter: 7;
}

.hex-item:nth-of-type(n + 78) {
    --counter: 8;
}

.hex-item:nth-of-type(n + 89) {
    --counter: 9;
}

.hex-item:nth-of-type(n + 100) {
    --counter: 10;
}

.hex-item:nth-of-type(n + 111) {
    --counter: 11;
}
